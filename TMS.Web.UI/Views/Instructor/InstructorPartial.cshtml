@using TMS.Web.UI.Helpers
@using TMS.Entities
@model Instructor

@{
  Layout = "~/Views/Shared/_CreateEditPartial.cshtml";
}

<ul class="list-group">
  <li class="list-group-item list-group-item-text list-group-item-info">
    <i class="fa fa-tags fa-lg fa-fw"></i>
    <strong>Personal Details</strong><i class="fa fa-chevron-down pull-right"></i>
  </li>
  <li class="list-group-item">
    <table class="table table-condensed">
      <tbody>
        <tr>
          <td class="col-md-2 text-right vert-align" style="border-top: none;">@Html.HiddenFor(instructor => instructor.Id)@Html.LabelForPascal(instructor => instructor.Salutation):</td>
          <td class="col-md-4" style="border-top: none;">@Html.EnumDropDownListFor(instructor => instructor.Salutation)</td>
          <td class="col-md-2 text-right vert-align" style="border-top: none;">@Html.LabelForPascal(instructor => instructor.FirstName):</td>
          <td class="col-md-4" style="border-top: none;">@Html.TextBoxFor(instructor => instructor.FirstName, new { @class = "form-control" })</td>
        </tr>
        <tr>
          <td class="col-md-2 text-right vert-align">@Html.LabelForPascal(instructor => instructor.LastName):</td>
          <td class="col-md-4">@Html.TextBoxFor(instructor => instructor.LastName, new { @class = "form-control" })</td>
          <td class="col-md-2 text-right vert-align">
            @Html.LabelForPascal(instructor => instructor.Experience):
          </td>
          <td class="col-md-4">
            <div class="input-group">
              @Html.TextBoxFor(instructor => instructor.Experience, new { @class = "form-control text-right" })<span class="input-group-addon">years</span>
            </div>
          </td>

        </tr>
        <tr>
          <td class="col-md-2 text-right vert-align">@Html.LabelForPascal(instructor => instructor.InstructorType)</td>
          <td class="col-md-4">@Html.EnumDropDownListFor(instructor => instructor.InstructorType)</td>
          <td class="text-right vert-align col-md-2">@Html.LabelForPascal(instructor => instructor.ReferredBy):</td>
          <td>
            @{
              List<dynamic> details = ViewBag.Details as List<dynamic>;
              var selectListItem = from u in details
                                   select new SelectListItem
                                   {
                                     Selected = @Model.ReferredBy == u.Id,
                                     Text = u.Name,
                                     Value = u.Id
                                   };
            }
            @Html.DropDownListFor(lead => lead.ReferredBy, selectListItem, "Select One...", new { @class = "form-control" })
          </td>
        </tr>
        <tr>
          <td class="col-md-2 text-right vert-align">@Html.LabelForPascal(instructor => instructor.City):</td>
          <td class="col-md-4">@Html.TextBoxFor(instructor => instructor.City, new { @class = "form-control" })</td>
          <td class="col-md-2 text-right vert-align">@Html.LabelForPascal(instructor => instructor.Country):</td>
          <td class="col-md-4">
            @{
              List<Country> countries = ViewBag.Countries;
              selectListItem = countries.Select(c => new SelectListItem
              {
                Selected = c.Id.Equals(@Model.Country, StringComparison.InvariantCultureIgnoreCase),
                Text = c.Name,
                Value = c.Id
              });
            }
            @Html.DropDownListFor(instructor => instructor.Country, selectListItem, "Select One...", new { @class = "form-control" })
        </tr>
        <tr>
          <td class="col-md-2 vert-align text-right">@Html.LabelForPascal(instructor => instructor.DateofJoin):</td>
          <td class="col-md-4">
            <div class='input-group date' id="doj">
              @Html.TextBoxFor(instructor => instructor.DateofJoin, "{0:dddd MMMM, dd yyyy}", new { @class = "form-control datetimepicker", @readonly = true })
              <span class="input-group-addon btn-outline btn-primary"><i class="glyphicon glyphicon-calendar"></i></span>
            </div>
          </td>
          <td class="col-md-2 vert-align text-right">@Html.LabelForPascal(instructor => instructor.DateOfResignation):</td>
          <td class="col-md-4">
            <div class='input-group date' id="dor">
              @Html.TextBoxFor(instructor => instructor.DateOfResignation, "{0:dddd MMMM, dd yyyy}", new { @class = "form-control datetimepicker", @readonly = true })
              <span class="input-group-addon btn-outline btn-primary"><i class="glyphicon glyphicon-calendar"></i></span>
            </div>
          </td>
        </tr>
        <tr>
          <td class="col-md-2 vert-align text-right">@Html.LabelFor(instructor => instructor.Description):</td>
          <td class="col-md-4">@Html.TextBoxFor(instructor => instructor.Description, new { @class = "form-control" })</td>
          <td class="col-md-2 vert-align text-right">@Html.LabelForPascal(instructor => instructor.Status):</td>
          <td class="col-md-4">@Html.EnumDropDownListFor(instructor => instructor.Status)</td>
        </tr>
        <tr>
          <td class="text-right"><strong>Rating:</strong></td>
          <td>
            <div id="Rating">
              @if (Model.Rating.HasValue)
              {
                var s = Model.Rating.Value.ToString().Split('.');
                for (int i = 0; i < int.Parse(s[0]); i++)
                {
                  <i class="fa fa-star fa-lg"></i>
                }

                if (s.Length > 1)
                {
                  float k = float.Parse('.' + s[1]);
                  if (k <= .25f)
                  {
                    <i class="fa fa-star-o fa-lg"></i>
                  }
                  else if (k > .25f && k <= .75f)
                  {
                    <i class="fa fa-star-half-empty fa-lg"></i>
                  }
                  else
                  {
                    <i class="fa fa-star fa-lg"></i>
                  }
                }
                for (int i = 0; i < 5 - Math.Ceiling(Model.Rating.Value); i++)
                {
                  <i class="fa fa-star-o fa-lg"></i>
                }
              }
              else
              {
                for (int i = 0; i < 5; i++)
                {
                  <i class="fa fa-star-o fa-lg"></i>
                }
              }
              <i class="fa fa-minus-circle fa-lg fa-fw text-danger"></i>
            </div>
          </td>
          <td colspan="2"></td>
        </tr>
      </tbody>
    </table>
  </li>
</ul>
<div class="row">
  <div class="col-md-6">
    @Html.Partial("_CommunicationDetail_Edit", @Model)
  </div>
  <div class="col-md-6">
    <ul class="list-group">
      <li class="list-group-item  list-group-item-text list-group-item-info"><i class="fa fa-book fa-lg fa-fw"></i><strong>Course Details</strong><i class="fa fa-chevron-down pull-right"></i></li>
      <li class="list-group-item">
        <table class="table table-condensed" id="courseDetail">
          <tbody>
            <tr>
              <td colspan="3" style="border-top:none;"><span class="btn btn-primary btn-xs btn-primary btn-outline pull-right" data-toggle="modal" data-uri="@Url.Action("CourseDetails", "Instructor")" data-style="zoom-out"><i class="glyphicon glyphicon-plus"></i></span></td>
            </tr>
            <tr>
              <td class="col-md-5"><strong>Title</strong></td>
              <td class="col-md-5"><strong>Relevant Experience</strong></td>
              <td class="col-md-2"></td>
            </tr>
            @if (Model.Courses != null && Model.Courses.Any())
            {
              IEnumerable<Course> courses = ViewBag.Courses;
              foreach (CourseExperience id in Model.Courses)
              {
                var course = courses.SingleOrDefault(x => x.Id == id.CourseId);
                <tr>
                  <td class="col-md-5"><input type="hidden" value="@course.Id">@course.Title</td>
                  <td class="col-md-5">@id.RelevantExperience years</td>
                  <td><span class="btn btn-xs btn-danger btn-outline pull-right"><i class="glyphicon glyphicon-remove"></i></span></td>
                </tr>
              }
            }
            @*<tr><td colspan="3"></td></tr>*@
          </tbody>
        </table>
      </li>
    </ul>
  </div>
</div>
<div class="row">
  <div class="col-md-12">
    <ul class="list-group">
      <li class="list-group-item list-group-item-info list-group-item-text"><i class="fa fa-certificate fa-lg fa-fw"></i><strong>Certifications</strong><i class="fa fa-chevron-down pull-right"></i></li>
      <li class="list-group-item">
        <table class="table table-condensed" id="certifications">
          <tbody>
            <tr>
              <td colspan="6" style="border-top:none;"><span class="btn btn-primary btn-xs btn-primary btn-outline pull-right" data-toggle="modal" data-uri="@Url.Action("CertificationDetails", "Instructor")" data-style="zoom-out"><i class="glyphicon glyphicon-plus"></i></span></td>
            </tr>
            <tr>
              <td class="col-md-4"><strong>Title</strong></td>
              <td class="col-md-2"><strong>Certifying Company</strong></td>
              <td class="col-md-2"><strong>Certified Date</strong></td>
              <td class="col-md-2"><strong>Valid thru</strong></td>
              <td class="col-md-2"><strong>Score</strong></td>
              <td></td>
            </tr>
            @if (Model.Certifications != null && @Model.Certifications.Any())
            {
              foreach (Certification certification in Model.Certifications)
              {
                <tr>
                  <td class="col-md-3">@certification.Title</td>
                  <td class="col-md-3">@certification.CertifyingCompany</td>
                  <td class="col-md-2">@certification.CertifiedDate.FormatDateTime(false)</td>
                  <td class="col-md-2">@certification.ValidThru.FormatDateTime(false)</td>
                  <td class="col-md-2">@certification.Score</td>
                  <td><span class="btn btn-xs btn-danger btn-outline pull-right"><i class="glyphicon glyphicon-remove"></i></span></td>
                </tr>
              }
            }
          </tbody>
        </table>
      </li>
    </ul>
  </div>
</div>
<div class="row">
  <div class="col-md-12">
    <ul class="list-group">
      <li class="list-group-item list-group-item-info list-group-item-text"><i class="fa fa-money fa-lg fa-fw"></i><strong>Payments Made</strong><i class="fa fa-chevron-down pull-right"></i></li>
      <li class="list-group-item">
        <table class="table table-condensed" id="paymentsMade">
          <tr>
            <td colspan="6" style="border-top:none;"><span class="btn btn-primary btn-xs btn-primary btn-outline pull-right" data-toggle="modal" data-uri="@Url.Action("PaymentsMade", "Instructor")" data-style="zoom-out"><i class="glyphicon glyphicon-plus"></i></span></td>
          </tr>
          <tr>
            <td class="col-md-4">Amount</td>
            <td class="col-md-2">Paid On</td>
            <td class="col-md-2">Mode of Payment</td>
            <td class="col-md-3">Made by</td>
            <td></td>
          </tr>
          @if (Model.Payments != null && @Model.Payments.Any())
          {
            details = ViewBag.Details as List<dynamic>;
            foreach (PaymentsMade paymentsMade in Model.Payments)
            {
              var detail = details.SingleOrDefault(x => x.Id == paymentsMade.PaymentMadeBy);
              <tr>
                <td class="col-md-3"><input type="hidden" value="@paymentsMade.PaymentMadeBy,@paymentsMade.PaymentType">@paymentsMade.Amount</td>
                <td class="col-md-3">@paymentsMade.MadeOn.FormatDateTime(false)</td>
                <td class="col-md-2">@Html.PascalCaseToPrettyString(paymentsMade.PaymentType)</td>
                <td class="col-md-2">
                  @{
              if (detail != null)
              {
                @detail.Name
              }
                }
              </td>
              <td><span class="btn btn-xs btn-danger btn-outline pull-right"><i class="glyphicon glyphicon-remove"></i></span></td>
            </tr>
            }
          }
        </table>
      </li>
    </ul>
  </div>
</div>

